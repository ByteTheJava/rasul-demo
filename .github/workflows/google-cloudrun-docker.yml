name: DEV - build & Deployment
# https://github.com/google-github-actions/setup-gcloud..1

on:
  push:
    branches: [ dev ]

env:
  PROJECT_ID: hms-dev-381208
  APP_NAME:   demo
  RUN_REGION: europe-west4
  SERVICE_NAME: demo-dev-cloud-run
  IMAGE_NAME: eu.gcr.io/hms-dev-381208/demo

jobs:
  build:
    name: Build the Application
    runs-on: ubuntu-latest
    environment: stage
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Run Unit Test
      run: mvn -B test --file pom.xml
  
    - name: Build Maven project
      run: |
        mvn -B package --file pom.xml #-Dmaven.test.skip
        mkdir staging && cp target/*.jar staging

    - name: Set up a cache for Maven
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2  
        
    - name: Persist workflow data as artifacts
      uses: actions/upload-artifact@v2
      with:
       name: github-actions-artifact
       path: staging

           
#docker build initiation..
  docker-build:
    name: docker build and deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          path: staging

      - name: project secrets
        run: echo $PROJECT_ID and gcr.io/${{ env.PROJECT_ID }}/${{ env.APP_NAME }} ,${{ env.PROJECT_ID }}
          
   # Configure Workload Identity Federation and generate an access token.
      - id: "gcloud_auth"
        name: "Authenticate to Google Cloud"
        uses: google-github-actions/auth@v0.4.4
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_DEV }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1

      # Build and push image to Google Container Registry - 

      # 1. configure docker
      - name: Configure Docker
        run: gcloud --quiet auth configure-docker
      # 2. Build the Docker image
      - name: Build Docker image
        run: docker build . --tag $IMAGE_NAME
      # 3. Push the Docker image to Container Registry
      - name: Push Docker image
        run: docker push $IMAGE_NAME

      # 4. Deploy image to Cloud Run.
      - name: Deploy Docker GCR to Cloud Run
        run: gcloud run deploy ${{ env.SERVICE_NAME }} 
            --quiet 
            --image $IMAGE_NAME 
            --region $RUN_REGION 
            --platform managed 
            --allow-unauthenticated
            --set-env-vars projectid='1086318131246'
            
     # - name: 'Cleanup Untagged(Stale) Images in Dev'
      #  run: gcloud container images list-tags  $IMAGE_NAME
       #     --filter='-tags:*'
        #    --format="get(digest)"
         #   --limit=5 > tags && while read p; do gcloud container images delete "$IMAGE_NAME@$p" 
          #  --quiet; done < tags

            #--filter="timestamp.date('%Y-%m-%d', Z)<$(date --date='-90 days' +'%Y-%m-%d')" #delete image older than 90Days
            #--filter='-tags:*'
             
      
